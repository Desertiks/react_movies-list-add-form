{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","validation","onBlur","useState","Math","random","toString","slice","id","touched","setToched","hasError","nameUrl","htmlFor","classNames","type","placeholder","event","target","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","setValidation","isEmpty","trim","urlRegex","RegExp","source","urlValidation","test","onSubmit","preventDefault","current","handleAddMovie","disabled","App","moviesFromServer","setMovies","currentState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f5264b3.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  validation?: boolean,\n  onBlur?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  validation,\n  onBlur = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n  const nameUrl = name === 'imdbUrl' || name === 'imgUrl';\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={(event) => {\n            setToched(true); onBlur(event.target.value);\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n      {!validation && nameUrl && touched && (\n        <p className=\"help is-danger\">Invalid URL</p>\n      )}\n    </div>\n  );\n};\n","import { SyntheticEvent, useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [validation, setValidation] = useState(true);\n  const isEmpty = !!title.trim() && !!imgUrl.trim()\n  && !!imdbUrl.trim() && !!imdbId.trim();\n\n  const urlRegex = new RegExp(`${\n    /(?:(?:(https?|ftp):)?\\/\\/)/.source\n  }${/(?:([^:\\n\\r]+):([^@\\n\\r]+)@)?/.source\n  }${/(?:(?:www\\.)?([^/\\n\\r]+))/.source\n  }${/(\\/[^?\\n\\r]+)?/.source\n  }${/(\\?[^#\\n\\r]*)?/.source\n  }${/(#?[^\\n\\r]*)?/.source}`);\n\n  const urlValidation = (value: string) => {\n    if (!urlRegex.test(value)) {\n      setValidation(false);\n    } else {\n      setValidation(true);\n    }\n  };\n\n  const handleAddMovie = (event: SyntheticEvent) => {\n    event.preventDefault();\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    setCount(current => current + 1);\n    onAdd(movie);\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event) => handleAddMovie(event)}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(value) => {\n          setTitle(value);\n        }}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(value) => {\n          setDescription(value);\n        }}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(value) => {\n          setImgUrl(value);\n        }}\n        onBlur={(value) => {\n          urlValidation(value);\n        }}\n        validation={validation}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(value) => {\n          setImdbUrl(value);\n        }}\n        onBlur={(value) => {\n          urlValidation(value);\n        }}\n        validation={validation}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(value) => {\n          setImdbId(value);\n        }}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isEmpty === false}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const onAdd = (movie: Movie) => {\n    setMovies((currentState) => [\n      ...currentState,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}